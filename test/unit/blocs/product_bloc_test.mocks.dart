// Mocks generated by Mockito 5.0.5 from annotations
// in crudnex/test/unit/blocs/product_bloc_test.dart.
// Do not manually edit this file.

import 'dart:async' as _i4;

import 'package:crudnex/data/idata_source.dart' as _i2;
import 'package:crudnex/data/models/product_model.dart' as _i5;
import 'package:crudnex/data/repositories/product_repository.dart' as _i3;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: comment_references
// ignore_for_file: unnecessary_parenthesis

class _FakeIDataSource extends _i1.Fake implements _i2.IDataSource {}

/// A class which mocks [ProductRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockProductRepository extends _i1.Mock implements _i3.ProductRepository {
  MockProductRepository() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.IDataSource get dataSource =>
      (super.noSuchMethod(Invocation.getter(#dataSource),
          returnValue: _FakeIDataSource()) as _i2.IDataSource);
  @override
  _i4.Future<List<_i5.ProductModel>> fetchProducts() =>
      (super.noSuchMethod(Invocation.method(#fetchProducts, []),
              returnValue:
                  Future<List<_i5.ProductModel>>.value(<_i5.ProductModel>[]))
          as _i4.Future<List<_i5.ProductModel>>);
  @override
  _i4.Future<void> deleteProduct(_i5.ProductModel? productModel) =>
      (super.noSuchMethod(Invocation.method(#deleteProduct, [productModel]),
          returnValue: Future<void>.value(null),
          returnValueForMissingStub: Future.value()) as _i4.Future<void>);
  @override
  _i4.Future<void> putProduct(_i5.ProductModel? productModel) =>
      (super.noSuchMethod(Invocation.method(#putProduct, [productModel]),
          returnValue: Future<void>.value(null),
          returnValueForMissingStub: Future.value()) as _i4.Future<void>);
}
