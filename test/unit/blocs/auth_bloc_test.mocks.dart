// Mocks generated by Mockito 5.0.5 from annotations
// in crudnex/test/unit/blocs/auth_bloc_test.dart.
// Do not manually edit this file.

import 'dart:async' as _i3;

import 'package:crudnex/data/DbSeeder.dart' as _i4;
import 'package:crudnex/services/login_service.dart' as _i2;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: comment_references
// ignore_for_file: unnecessary_parenthesis

/// A class which mocks [LoginService].
///
/// See the documentation for Mockito's code generation for more information.
class MockLoginService extends _i1.Mock implements _i2.LoginService {
  MockLoginService() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i3.Future<String> login({String? email, String? password}) =>
      (super.noSuchMethod(
          Invocation.method(#login, [], {#email: email, #password: password}),
          returnValue: Future<String>.value('')) as _i3.Future<String>);
  @override
  _i3.Future<void> deleteToken() =>
      (super.noSuchMethod(Invocation.method(#deleteToken, []),
          returnValue: Future<void>.value(null),
          returnValueForMissingStub: Future.value()) as _i3.Future<void>);
  @override
  _i3.Future<void> persistToken({String? token}) =>
      (super.noSuchMethod(Invocation.method(#persistToken, [], {#token: token}),
          returnValue: Future<void>.value(null),
          returnValueForMissingStub: Future.value()) as _i3.Future<void>);
  @override
  bool hasToken() =>
      (super.noSuchMethod(Invocation.method(#hasToken, []), returnValue: false)
          as bool);
}

/// A class which mocks [DbSeeder].
///
/// See the documentation for Mockito's code generation for more information.
class MockDbSeeder extends _i1.Mock implements _i4.DbSeeder {
  MockDbSeeder() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i3.Future<void> seedProducts() =>
      (super.noSuchMethod(Invocation.method(#seedProducts, []),
          returnValue: Future<void>.value(null),
          returnValueForMissingStub: Future.value()) as _i3.Future<void>);
  @override
  _i3.Future<void> deleteData() =>
      (super.noSuchMethod(Invocation.method(#deleteData, []),
          returnValue: Future<void>.value(null),
          returnValueForMissingStub: Future.value()) as _i3.Future<void>);
}
